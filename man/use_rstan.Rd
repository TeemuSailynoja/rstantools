% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/use_rstan.R
\name{use_rstan}
\alias{use_rstan}
\title{Add Stan infrastructure to an existing package.}
\usage{
use_rstan(pkgdir = ".", license = TRUE)
}
\arguments{
\item{pkgdir}{Path to package root folder.}

\item{license}{Logical or character; whether or not to paste the contents of a \code{license.stan} file at the top of all Stan code, or path to such a file.  If \code{TRUE} adds the \code{GPL (>= 3)} license (see \strong{Details}).}
}
\value{
Invisibly, whether or not any files or folders where created or modified.
}
\description{
Add Stan infrastructure to an existing package.
}
\details{
Prepares a package to compile and use Stan code by performing the following steps:
\enumerate{
  \item Create \code{inst/stan} folder where all \code{.stan} files defining Stan models should be stored.
  \item Create \code{inst/stan/include} where optional \code{license.stan} file is stored.
  \item Create \code{inst/include/stan_meta_header.hpp} to include optional header files used by Stan code.
  \item Create \code{src} folder (if it doesn't exist) to contain the Stan C++ code.
  \item Create \code{R} folder (if it doesn't exist) to contain wrapper code to expose Stan C++ classes to \R.
  \item Update \code{DESCRIPTION} file to contain all needed dependencies to compile Stan C++ code.
  \item If \code{NAMESPACE} file is generic, i.e., only contains the line \code{exportPattern(\"^[[:alpha:]]+\")}, add \code{import(Rcpp, methods)} and \code{useDynLib} directives.  If \code{NAMESPACE} is not generic, display message telling user what to add to \code{NAMESPACE} themselves.
}
}
